{"version":3,"file":"bundle.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAE1C,IAAMC,EAAUF,SAASG,iBAAiB,sCACpCC,EAASJ,SAASG,iBAAiB,qCAEzC,GAAID,EAAQG,SAAWD,EAAOC,OAA9B,CAIAH,EAAQI,SAAQ,SAACC,EAAQC,GACrBD,EAAON,iBAAiB,SAAS,WAC7B,IAAMQ,EAAQL,EAAOI,GACfE,EAAQH,EAAOI,cAAc,KAEnC,GAAIF,GAASC,EAAO,CAChB,IAAME,EAAaH,EAAMI,UAAUC,SAAS,QAE5CV,EAAOE,SAAQ,SAAAS,GACPA,EAAEF,UAAUC,SAAS,SACrBC,EAAEF,UAAUG,OAAO,OAE3B,IAEAd,EAAQI,SAAQ,SAAAS,GACZ,IAAME,EAAIF,EAAEJ,cAAc,KACtBM,IACAA,EAAEJ,UAAUG,OAAO,YACnBC,EAAEJ,UAAUK,IAAI,WAExB,IAEKN,IACDH,EAAMI,UAAUK,IAAI,QACpBR,EAAMG,UAAUG,OAAO,WACvBN,EAAMG,UAAUK,IAAI,YAE5B,CACJ,GACJ,IAGA,IAAMC,EAAYnB,SAASW,cAAc,oCACnCS,EAAQpB,SAASG,iBAAiB,8BAClCkB,EAASrB,SAASG,iBAAiB,0CAErCmB,EAAc,EAEZC,EAAcC,KAAKC,KAAKL,EAAMf,OADd,GAGhBqB,EAAqB,WACvBN,EAAMd,SAAQ,SAAAqB,GAAI,OAAIA,EAAKC,MAAMC,QAAU,MAAM,IAEjD,IAAK,IAAIZ,EANS,EAMLK,EAA6BL,EANxB,GAM6BK,EAAc,IAAsBL,EAAIG,EAAMf,OAAQY,IACjGG,EAAMH,GAAGW,MAAMC,QAAU,OAI7BR,EAAOf,SAAQ,SAACwB,EAAOtB,GAEfsB,EAAMF,MAAMG,gBADZvB,IAAWc,EACmB,UAEA,SAEtC,GACJ,EAOAD,EAAOf,SAAQ,SAACwB,EAAOtB,GACnBsB,EAAM7B,iBAAiB,SAAS,YANhB,SAACO,GACjBc,EAAcd,EACdkB,GACJ,CAIQM,CAAYxB,EAChB,GACJ,IAEA,IAAIyB,EAAiBC,GAAa,EAElCf,EAAUlB,iBAAiB,aAAa,SAACkC,GACrCF,EAAUE,EAAEC,MACZF,GAAa,CACjB,IAEAf,EAAUlB,iBAAiB,aAAa,SAACkC,GAChCD,GACIC,EAAEC,KACf,IAEAjB,EAAUlB,iBAAiB,WAAW,SAACkC,GACnC,GAAKD,EAAL,CACA,IAAMG,EAASF,EAAEC,MAAQH,EACrBI,EAAS,IACLf,EAAc,EACdA,IAEAA,EAAcC,EAAc,EAEzBc,GAAU,MACbf,EAAcC,EAAc,EAC5BD,IAEAA,EAAc,GAGtBY,GAAa,EACbR,GAhBuB,CAiB3B,IAEAP,EAAUlB,iBAAiB,cAAc,WAChCiC,IACLA,GAAa,EACbR,IACJ,IAEAA,IAIwB1B,SAASW,cAAc,uBAE/BV,iBAAiB,eAAe,SAACqC,GAC7CA,EAAMC,gBACV,GApHA,CAqHJ","sources":["webpack://hospedagem/./src/assets/js/script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n    // Gerenciamento de Pop-up\n    const titulos = document.querySelectorAll('.sections__pop-up__caixas__titulos');\n    const textos = document.querySelectorAll('.sections__pop-up__caixas__textos');\n\n    if (titulos.length !== textos.length) {\n        return;\n    }\n\n    titulos.forEach((titulo, indice) => {\n        titulo.addEventListener('click', () => {\n            const texto = textos[indice];\n            const icone = titulo.querySelector('i');\n\n            if (texto && icone) {\n                const estaAberto = texto.classList.contains('open');\n\n                textos.forEach(t => {\n                    if (t.classList.contains('open')) {\n                        t.classList.remove('open');\n                    }\n                });\n\n                titulos.forEach(t => {\n                    const i = t.querySelector('i');\n                    if (i) {\n                        i.classList.remove('fa-minus');\n                        i.classList.add('fa-plus');\n                    }\n                });\n\n                if (!estaAberto) {\n                    texto.classList.add('open');\n                    icone.classList.remove('fa-plus');\n                    icone.classList.add('fa-minus');\n                }\n            }\n        });\n    });\n\n    // Carrossel\n    const container = document.querySelector('.sections__opiniões__gerenciador');\n    const itens = document.querySelectorAll('.sections__opiniões__itens');\n    const pontos = document.querySelectorAll('.sections__opiniões__navegação__pontos');\n\n    let indiceAtual = 0;\n    const itensPorSlide = 2;\n    const totalSlides = Math.ceil(itens.length / itensPorSlide);\n\n    const atualizarCarrossel = () => {\n        itens.forEach(item => item.style.display = 'none');\n\n        for (let i = indiceAtual * itensPorSlide; i < (indiceAtual + 1) * itensPorSlide && i < itens.length; i++) {\n            itens[i].style.display = 'flex';\n        }\n\n        // Atualiza a cor das bolinhas\n        pontos.forEach((ponto, indice) => {\n            if (indice === indiceAtual) {\n                ponto.style.backgroundColor = '#636464';\n            } else {\n                ponto.style.backgroundColor = '#97989b';\n            }\n        });\n    };\n\n    const irParaSlide = (indice) => {\n        indiceAtual = indice;\n        atualizarCarrossel();\n    };\n\n    pontos.forEach((ponto, indice) => {\n        ponto.addEventListener('click', () => {\n            irParaSlide(indice);\n        });\n    });\n\n    let inicioX, atualX, arrastando = false;\n\n    container.addEventListener('mousedown', (e) => {\n        inicioX = e.pageX;\n        arrastando = true;\n    });\n\n    container.addEventListener('mousemove', (e) => {\n        if (!arrastando) return;\n        atualX = e.pageX;\n    });\n\n    container.addEventListener('mouseup', (e) => {\n        if (!arrastando) return;\n        const moverX = e.pageX - inicioX;\n        if (moverX > 100) {\n            if (indiceAtual > 0) {\n                indiceAtual--;\n            } else {\n                indiceAtual = totalSlides - 1;\n            }\n        } else if (moverX < -100) {\n            if (indiceAtual < totalSlides - 1) {\n                indiceAtual++;\n            } else {\n                indiceAtual = 0;\n            }\n        }\n        arrastando = false;\n        atualizarCarrossel();\n    });\n\n    container.addEventListener('mouseleave', () => {\n        if (!arrastando) return;\n        arrastando = false;\n        atualizarCarrossel();\n    });\n\n    atualizarCarrossel();\n\n    //Proibido cópia\n\n    const opinioesSection = document.querySelector('.sections__opiniões');\n\n    opinioesSection.addEventListener('selectstart', (event) => {\n        event.preventDefault();\n    });\n});\n"],"names":["document","addEventListener","titulos","querySelectorAll","textos","length","forEach","titulo","indice","texto","icone","querySelector","estaAberto","classList","contains","t","remove","i","add","container","itens","pontos","indiceAtual","totalSlides","Math","ceil","atualizarCarrossel","item","style","display","ponto","backgroundColor","irParaSlide","inicioX","arrastando","e","pageX","moverX","event","preventDefault"],"sourceRoot":""}